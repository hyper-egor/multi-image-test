name: Test branch in docker
on: [ push ]
jobs:
  test-in-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout multi-image-test
        uses: actions/checkout@v3
      - name: Check out conf server
        uses: actions/checkout@master
        with:
             repository: hyper-egor/conf-server
             path: conf-server
      - name: Check out config file
        uses: actions/checkout@master
        with:
              repository:  hyper-egor/example-configs 
              path: conf-server/configs
      - name: Check out solace
        uses: actions/checkout@master
        with:
              repository:   SolaceLabs/solace-single-docker-compose  
              path: solcaeLabs
      - name: build solace 
        run: cd ./solcaeLabs/template&&docker-compose -f PubSubStandard_singleNode.yml up -d
      - name: echo checkout 
        run: docker ps
      #- name: run solace
      #  run: docker run -d -p 8080:8080 -p 55555:55555 -p:8008:8008 --shm-size=2g --env username_admin_globalaccesslevel=admin --env username_admin_password=admin --name=solace solace/solace-pubsub-standard
      - name: temp sleep 30
        uses: jakejarvis/wait-action@master
        with:
              time: '30s'
              uses: nev7n/wait_for_response@v1
      - name: wait for solace
        with:
              url: 'http://localhost:8080/'
              responseCode: 200
              timeout: 2000
              interval: 500
      - name: create queue
        uses: fjogeleit/http-request-action@v1
        with:
              url: 'http://localhost:8080/SEMP/v2/config/msgVpns/default/queues'
              method: 'POST'
              username: 'admin'
              password: 'admin'
              customHeaders: '{"Content-Type": "application/json"}'
              data: '{"queueName":"A2Bqueue","accessType":"non-exclusive","egressEnabled":true,"ingressEnabled":true,"permission":"consume"}'
      - name: build conf-server
        run: gradle build -p ./conf-server
      - name: build conf-server container
        run: gradle docker -p ./conf-server
      - name: run conf-server container
        run: gradle dockerRun -p ./conf-server
        #TODO run solcale container
      - name: build main project
        run: gradle build
      - name: run IT
        run: gradle build -Dconfig_server_host=localhost  --stacktrace -p ./it 
        
        
        
